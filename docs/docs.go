// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2020-02-20 20:11:02.104099 +0800 PST m=+0.020597090

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/articles/{id}": {
            "get": {
                "description": "获取文章列表",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "获取文章列表",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "页数",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "标题",
                        "name": "title",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/tags": {
            "get": {
                "description": "获取文章标签列表 带字段筛选 带分页",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "获取文章标签列表",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "当前页数",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "标签名称",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {}
                }
            },
            "post": {
                "description": "新增文章标签",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "新增文章标签",
                "parameters": [
                    {
                        "description": "新增文章标签",
                        "name": "created_by",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Tag"
                        }
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        }
    },
    "definitions": {
        "models.Tag": {
            "type": "object",
            "properties": {
                "createdOn": {
                    "description": "创建时间",
                    "type": "integer"
                },
                "created_by": {
                    "description": "创建人",
                    "type": "string"
                },
                "id": {
                    "description": "id标识",
                    "type": "integer"
                },
                "modifiedOn": {
                    "description": "修改时间",
                    "type": "integer"
                },
                "modified_by": {
                    "description": "修改人",
                    "type": "string"
                },
                "name": {
                    "description": "标签名称",
                    "type": "string"
                },
                "state": {
                    "description": "启用或禁用",
                    "type": "integer"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0.0",
	Host:        "",
	BasePath:    "/api/v1/",
	Schemes:     []string{},
	Title:       "博客接口文档说明",
	Description: "博客系统的api接口文档",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
